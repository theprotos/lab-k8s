# -*- mode: ruby -*-
# vi: set ft=ruby :

# vagrant rsync-auto

VAGRANTFILE_API_VERSION = "2"
HOST_NAME = "docker"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

if Vagrant.has_plugin?("vagrant-vbguest")
  config.vbguest.auto_update = false
end

  config.vm.define "master" do |master|
    #master.vm.box = "ubuntu/jammy64"
    #master.vm.box = "centos/8"
    #master.vm.box = "centos/stream8"
    master.vm.box = "generic/alpine316"
    master.vm.hostname = "master"
    master.vm.provider :virtualbox do |vb|
      #vb.gui = true
      vb.name = "#{HOST_NAME}-master"
      vb.memory = 3*1024
      vb.cpus = 2
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "off"]
      vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
      vb.customize ["modifyvm", :id, "--nested-hw-virt", "on"]
      vb.customize ["modifyvm", :id, "--ioapic", "on"]
      vb.customize ["modifyvm", :id, "--description", "swarm master"]
     end

    master.vm.network "private_network", ip: "192.168.200.200"
    master.vm.synced_folder ".", "/vagrant", type: "virtualbox"
    # Rest API
    master.vm.network "forwarded_port", guest: 5000, host: 5000
    # Prometheus
    master.vm.network "forwarded_port", guest: 9090, host: 9090
    # jenkins
    master.vm.network "forwarded_port", guest: 8080, host: 8080
    master.vm.network "forwarded_port", guest: 8081, host: 8081

    master.vm.provision "shell", inline: <<-SHELL
      cd /vagrant/scripts
      chmod +x *.sh
      ls -al
      cat /etc/os-release
      sh bootstrap-alpine.sh
      #sh bootstrap-centos.sh
      #sh bootstrap-ubuntu.sh
      sh bootstrap-master.sh
      sh deploy.sh
    SHELL

        #master.trigger.after :up do |t|
        #  t.info = "rsync auto"
        #  t.run = {inline: "vagrant rsync-auto master"}
          # If you want it running in the background switch these
          #t.run = {inline: "bash -c 'vagrant rsync-auto master &'"}
        #end

  end


    (1..2).each do |i|
      config.vm.define "node-#{i}" do |node|
        #node.vm.box = "ubuntu/jammy64"
        node.vm.box = "generic/alpine316"
        node.vm.hostname = "node#{i}"
        node.vm.network "private_network", ip: "192.168.200.10#{i}"
        node.vm.ignore_box_vagrantfile = true
        node.vm.synced_folder ".", "/vagrant", type: "virtualbox"
        node.vm.provider :virtualbox do |vb|
          #vb.gui = true
          vb.name = "#{HOST_NAME}-node-#{i}"
          vb.memory = 1*1048
          vb.cpus = 2
          vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
          vb.customize ["modifyvm", :id, "--ioapic", "on"]
          vb.customize ["modifyvm", :id, "--description", "swarm worker"]
          vb.customize ["modifyvm", :id, "--cpuexecutioncap", "100"]
        end
        node.vm.provision "shell", inline: <<-SHELL
          cd /vagrant/scripts
          chmod +x *.sh
          ls -al
          cat /etc/os-release
          sh bootstrap-alpine.sh
          #sh bootstrap-centos.sh
          #sh bootstrap-ubuntu.sh
          sh bootstrap-worker.sh
        SHELL
      end
    end


#  master.vm.provision "ansible" do |ansible|
#    ansible.compatibility_mode = "2.0"
#    ansible.playbook = "provisioning/main.yml"
#  end

end
