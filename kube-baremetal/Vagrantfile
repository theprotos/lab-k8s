# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

=begin
    ###################[ Mini ]###################
    config.vm.define "mini" do |mini|
        #mini.vm.box = "ubuntu/trusty64"
        mini.vm.box = "ubuntu/xenial64"
        #mini.vm.box = "centos/7"
        mini.vm.hostname = 'mini'
        #mini.vm.network "private_network", type: "dhcp"
        #mini.vm.network "private_network", ip: "192.168.100.10", auto_config: false
        mini.vm.network "private_network", ip: "192.168.100.11"
        mini.vm.network "forwarded_port", guest: 8080, host: 8080
        mini.vm.synced_folder "public", "/vagrant_data"
        # Run commands
        mini.vm.provision "shell", inline: <<-SHELL
            cd /vagrant_data/scripts
            ./pre-req.sh
            ./install-kuberctl-deb.sh
            ./install-minikube.sh
        SHELL
        # VM hardware parameters
        mini.vm.provider "virtualbox" do |v|
            v.memory = 1000
            #v.cpus = 2
            v.name = "kuber-mini"
            v.customize ["modifyvm", :id, "--hwvirtex", "on"]
        end
    end
=end

    ###################[ Master ]###################
    config.vm.define "master" do |master|
        #master.vm.box = "ubuntu/trusty64"
        master.vm.box = "ubuntu/xenial64"
        master.vm.hostname = 'master'
        #master.vm.network "private_network", type: "dhcp"
        master.vm.network "private_network", ip: "192.168.100.20"
        master.vm.synced_folder "public", "/vagrant_data"
        # Run commands
        master.vm.provision "shell", inline: <<-SHELL
            cd /vagrant_data/scripts
            ./pre-req.sh
            ./install-kuberctl-deb.sh
        SHELL
        # VM hardware parameters
        master.vm.provider "virtualbox" do |v|
            v.memory = 1000
            #v.cpus = 1
            v.name = "kuber-master"
            v.customize ["modifyvm", :id, "--hwvirtex", "on"]
        end
    end

    ###################[ Node1 ]###################
    config.vm.define "node1" do |node1|
        #node1.vm.box = "bento/centos-7.3"
        node1.vm.box = "ubuntu/xenial64"
        node1.vm.hostname = 'node1'
        #node1.vm.network "private_network", type: "dhcp"
        node1.vm.network "private_network", ip: "192.168.100.21"
        # Tomcat mapping
        node1.vm.network "forwarded_port", guest: 9200, host: 9211
        node1.vm.network "forwarded_port", guest: 9300, host: 9311
        node1.vm.synced_folder "public", "/vagrant_data"
        # Run commands
        node1.vm.provision "shell", inline: <<-SHELL
            cd /vagrant_data/scripts
            ./pre-req.sh
            ./install-kuberctl-deb.sh
        SHELL
        # VM hardaware paramentes
        node1.vm.provider "virtualbox" do |v|
            v.memory = 1000
            #v.cpus = 1
            v.name = "kuber-node1"
            v.customize ["modifyvm", :id, "--hwvirtex", "on"]
        end
    end

    ###################[ Node2 ]###################
    config.vm.define "node2" do |node2|
        #node2.vm.box = "bento/centos-7.3"
        node2.vm.box = "ubuntu/xenial64"
        node2.vm.hostname = 'node2'
        node2.vm.network "private_network", ip: "192.168.100.22"
        #node2.vm.network "private_network", type: "dhcp"
        # Tomcat mapping
        node2.vm.network "forwarded_port", guest: 9200, host: 9221
        node2.vm.network "forwarded_port", guest: 9300, host: 9321
        node2.vm.synced_folder "public", "/vagrant_data"
        # Run commands
        node2.vm.provision "shell", inline: <<-SHELL
            cd /vagrant_data/scripts
            ./pre-req.sh
            ./install-kuberctl-deb.sh
        SHELL
        # VM hardaware paramentes
        node2.vm.provider "virtualbox" do |v|
            v.memory = 1000
            #v.cpus = 1
            v.name = "kuber-node2"
            v.customize ["modifyvm", :id, "--hwvirtex", "on"]
        end
    end
    ###################[ Node3 ]###################
        config.vm.define "node3" do |node3|
            #node3.vm.box = "bento/centos-7.3"
            node3.vm.box = "ubuntu/xenial64"
            node3.vm.hostname = 'node3'
            node3.vm.network "private_network", ip: "192.168.100.23"
            #node3.vm.network "private_network", type: "dhcp"
            # Tomcat mapping
            node3.vm.network "forwarded_port", guest: 9200, host: 9231
            node3.vm.network "forwarded_port", guest: 9300, host: 9331
            node3.vm.synced_folder "public", "/vagrant_data"
            # Run commands
            node3.vm.provision "shell", inline: <<-SHELL
                cd /vagrant_data/scripts
                ./pre-req.sh
                ./install-kuberctl-deb.sh
            SHELL
            # VM hardaware paramentes
            node3.vm.provider "virtualbox" do |v|
                v.memory = 1000
                #v.cpus = 1
                v.name = "kuber-node3"
                v.customize ["modifyvm", :id, "--hwvirtex", "on"]
            end
        end

    ###################[ Node4 ]###################
        config.vm.define "node4" do |node4|
            #node4.vm.box = "bento/centos-7.3"
            node4.vm.box = "ubuntu/xenial64"
            node4.vm.hostname = 'node4'
            node4.vm.network "private_network", ip: "192.168.100.24"
            #node4.vm.network "private_network", type: "dhcp"
            # Tomcat mapping
            node4.vm.network "forwarded_port", guest: 9200, host: 9241
            node4.vm.network "forwarded_port", guest: 9300, host: 9341
            node4.vm.synced_folder "public", "/vagrant_data"
            # Run commands
            node4.vm.provision "shell", inline: <<-SHELL
                cd /vagrant_data/scripts
                ./pre-req.sh
                ./install-kuberctl.s
            SHELL
            # VM hardaware paramentes
            node4.vm.provider "virtualbox" do |v|
                v.memory = 1000
                #v.cpus = 1
                v.name = "kuber-node4"
                v.customize ["modifyvm", :id, "--hwvirtex", "on"]
            end
        end
end
